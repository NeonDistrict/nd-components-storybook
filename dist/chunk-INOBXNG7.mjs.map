{
  "version": 3,
  "sources": ["../src/components/button/index.tsx"],
  "sourcesContent": ["import React from 'react';\n\nimport { VariantProps, CSS } from '../../system';\n\nimport * as S from './styles';\n\nexport type ButtonProps = {\n  /**\n   * Variant style of the button\n   * @default \"primary\"\n   */\n  variant?: VariantProps<typeof S.Button>['variant'];\n  /**\n   * Size of the button\n   * @default \"md\"\n   */\n  size?: VariantProps<typeof S.Button>['size'];\n  /**\n   * Shape of the button\n   * @default \"squared\"\n   */\n  shape?: VariantProps<typeof S.Button>['shape'];\n  /**\n   * If `true` button should be full width\n   * @default \"false\"\n   */\n  fluid?: VariantProps<typeof S.Button>['fluid'];\n  /**\n   * If `true`, the button will show a spinner.\n   * @default \"false\"\n   */\n  loading?: boolean;\n  /**\n   * Add an icon beside text\n   */\n  icon?: React.ReactNode;\n  /**\n   * Position of the icon\n   * @default \"left\"\n   */\n  iconPosition?: 'left' | 'right';\n  /**\n   * Button text\n   */\n  children?: React.ReactNode;\n  /**\n   * CSS properties\n   */\n  css?: CSS;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\n/**\n * Button component\n *\n * @description used to trigger an action or event.\n */\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      type = 'button',\n      icon,\n      iconPosition = 'left',\n      loading,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <S.Button\n        ref={ref}\n        type={type}\n        onlyIcon={!!icon && !children}\n        loading={loading}\n        {...props}\n      >\n        {icon && iconPosition === 'left' && icon}\n\n        {children && <span>{children}</span>}\n\n        {loading && <S.Spinner />}\n\n        {icon && iconPosition === 'right' && icon}\n      </S.Button>\n    );\n  },\n);\n\nButton.displayName = 'Button';\n"],
  "mappings": ";;;;;;;;;;AAAA;AAwDO,IAAM,UAAS,MAAM,WAC1B,CACE,IAQA,QACG;AATH,eACE;AAAA,WAAO;AAAA,IACP;AAAA,IACA,eAAe;AAAA,IACf;AAAA,IACA;AAAA,MALF,IAMK,kBANL,IAMK;AAAA,IALH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAKF,SACE,oCAAG,QAAH;AAAA,IACE;AAAA,IACA;AAAA,IACA,UAAU,CAAC,CAAC,QAAQ,CAAC;AAAA,IACrB;AAAA,KACI,QAEH,QAAQ,iBAAiB,UAAU,MAEnC,YAAY,oCAAC,QAAD,MAAO,WAEnB,WAAW,oCAAG,SAAH,OAEX,QAAQ,iBAAiB,WAAW;AAAA;AAM7C,QAAO,cAAc;",
  "names": []
}
