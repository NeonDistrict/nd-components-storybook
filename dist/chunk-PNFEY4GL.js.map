{
  "version": 3,
  "sources": ["../src/components/button/styles.ts"],
  "sourcesContent": ["import { styled } from '../../system';\n\nimport { Spinner as BaseSpinner } from '../spinner';\n\nexport const Button = styled('button', {\n  // reset\n  appearance: 'none',\n  bg: 'transparent',\n  fontFamily: 'inherit',\n  border: '1px solid',\n  borderColor: 'transparent',\n  whiteSpace: 'nowrap',\n  outline: 0,\n\n  // base styles\n  py: '$2',\n  fontWeight: 600,\n  textTransform: 'uppercase',\n  color: '$white',\n  d: 'flex',\n  align: 'center',\n  justify: 'center',\n  gap: '$2',\n  userSelect: 'none',\n  transition: '$fast',\n\n  '&:not(:disabled)': {\n    cursor: 'pointer',\n  },\n\n  /**\n   * Variants\n   */\n  variants: {\n    /**\n     * Variant variant\n     */\n    variant: {\n      primary: {\n        bg: '$pink-500',\n\n        '&:hover': {\n          bg: '$pink-600',\n        },\n        '&:focus': {\n          borderColor: '$teal-500',\n        },\n        '&:active': {\n          bg: '$pink-700',\n        },\n        '&:disabled': {\n          bg: '$grey-400',\n          color: '$grey-600',\n        },\n      },\n      secondary: {\n        bg: '$grey-700',\n\n        '&:hover': {\n          bg: '$grey-800',\n        },\n        '&:focus': {\n          bg: '$grey-800',\n          borderColor: '$teal-500',\n        },\n        '&:active': {\n          bg: '$grey-800',\n        },\n        '&:disabled': {\n          bg: '$grey-400',\n          color: '$grey-600',\n        },\n      },\n      destructive: {\n        color: '$red-500',\n        borderColor: '$red-500',\n\n        '&:hover': {\n          bg: '$red-900',\n        },\n        '&:focus': {\n          borderColor: '$teal-500',\n        },\n        '&:active': {\n          bg: '$red-900',\n        },\n        '&:disabled': {\n          color: '$grey-600',\n          borderColor: '$grey-400',\n          bg: '$grey-8000',\n        },\n      },\n      outline: {\n        borderColor: '$pink-500',\n\n        '&:focus': {\n          borderColor: '$teal-500',\n        },\n        '&:disabled': {\n          color: '$grey-600',\n          borderColor: '$grey-400',\n        },\n      },\n      naked: {\n        color: '$pink-500',\n\n        '&:hover': {\n          color: '$pink-600',\n          bg: '$red-900',\n        },\n        '&:focus': {\n          borderColor: '$teal-500',\n        },\n        '&:active': {\n          color: '$pink-600',\n          bg: 'transparent',\n        },\n        '&:disabled': {\n          color: '$grey-600',\n          bg: 'transparent',\n        },\n      },\n    },\n    /**\n     * Shape types\n     */\n    shape: {\n      rounded: {\n        br: '$full',\n      },\n      squared: {\n        br: 0,\n      },\n    },\n    /**\n     * Size types\n     */\n    size: {\n      sm: {\n        minW: 32,\n        h: 32,\n        fontSize: '$xs',\n        p: '$2',\n      },\n      md: {\n        minW: 40,\n        h: 40,\n        fontSize: '$sm',\n        px: '$6',\n      },\n    },\n    /**\n     * Loading variant\n     */\n    loading: {\n      true: {\n        'span, svg': {\n          opacity: 0,\n        },\n        svg: {\n          opacity: 0,\n        },\n      },\n    },\n    /**\n     * Fluid variant\n     */\n    fluid: {\n      true: {\n        w: '$full',\n      },\n    },\n    /**\n     * If the component does'nt have children, but have a icon\n     */\n    onlyIcon: {\n      true: {},\n    },\n  },\n  compoundVariants: [\n    {\n      size: 'md',\n      onlyIcon: 'true',\n      css: {\n        p: '$2',\n      },\n    },\n    {\n      size: 'sm',\n      onlyIcon: 'true',\n      css: {\n        p: '$2',\n      },\n    },\n  ],\n\n  /**\n   * Default variants\n   */\n  defaultVariants: {\n    variant: 'primary',\n    shape: 'squared',\n    size: 'md',\n    loading: false,\n  },\n});\n\nexport const Spinner = styled(BaseSpinner, {\n  d: 'flex',\n  align: 'center',\n  position: 'absolute',\n  marginInlineEnd: 0,\n});\n"],
  "mappings": "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",
  "names": []
}
