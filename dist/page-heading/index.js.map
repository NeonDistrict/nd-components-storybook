{
  "version": 3,
  "sources": ["../../src/components/page-heading/index.tsx", "../../src/components/page-heading/styles.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/no-children-prop */\n\nimport React, { HTMLAttributes } from 'react';\n\nimport { CSS } from '../../system';\n\nimport { useMediaQuery } from '../../hooks';\n\nimport { Button } from '../button';\n\nimport * as S from './styles';\n\nexport type PageHeadingProps = {\n  /**\n   * The title of the page.\n   */\n  title: string;\n  /**\n   * Description of the heading\n   */\n  description?: string;\n  /**\n   * Button childrens\n   */\n  children?: React.ReactNode;\n  /**\n   *\n   * CSS properties\n   */\n  css?: CSS;\n} & HTMLAttributes<HTMLDivElement>;\n\n/**\n * PageHeading component\n *\n * @description Headings are used for rendering headlines.\n */\nexport const PageHeading = ({\n  description,\n  children,\n  title,\n  ...props\n}: PageHeadingProps) => {\n  const isMobile = useMediaQuery('(max-width: 768px)');\n\n  return (\n    <S.Wrapper {...props}>\n      <S.HeadingStyled>\n        <S.Title haveButton={!!children}>{title}</S.Title>\n\n        <S.Line haveButton={!!children} haveDescription={!!description} />\n\n        {!isMobile && (\n          <S.FlexEnd>\n            <ChildrenButtons children={children} isMobile={isMobile} />\n          </S.FlexEnd>\n        )}\n      </S.HeadingStyled>\n\n      <S.FullLine haveButton={!!children} haveDescription={!!description} />\n\n      <S.Bottom haveButton={!!children} haveDescription={!!description}>\n        {description && <S.Description>{description}</S.Description>}\n\n        {isMobile && (\n          <ChildrenButtons children={children} isMobile={isMobile} />\n        )}\n      </S.Bottom>\n    </S.Wrapper>\n  );\n};\n\ntype ChildrenButtonsProps = {\n  children: React.ReactNode;\n  isMobile: boolean;\n};\n\nconst ChildrenButtons = ({ children, isMobile }: ChildrenButtonsProps) => (\n  <>\n    {React.Children.map(children, (child: any) => {\n      if (child?.type === Button && isMobile) {\n        return React.cloneElement(child, {\n          fluid: true,\n        });\n      }\n\n      return child;\n    })}\n  </>\n);\n", "import { styled } from '../../system';\n\nexport const Wrapper = styled('div', {\n  textTransform: 'uppercase',\n  fontWeight: '$medium',\n});\n\nexport const HeadingStyled = styled('div', {\n  fontSize: '$2xl',\n  d: 'flex',\n  align: 'center',\n  justify: 'space-between',\n  position: 'relative',\n  mb: '$1',\n});\n\nexport const Title = styled('h1', {\n  w: '$full',\n  d: 'flex',\n  align: 'center',\n  color: '$white',\n  fontSize: '$lg',\n  fontWeight: '$medium',\n  m: 0,\n  lineHeight: '24px',\n  letterSpacing: '0.1em',\n\n  /**\n   * Variants\n   */\n  variants: {\n    /**\n     * haveButton variant\n     */\n    haveButton: {\n      true: {\n        justify: 'center',\n        '@md': {\n          justify: 'flex-start',\n        },\n      },\n    },\n  },\n});\n\nexport const FlexEnd = styled('div', {\n  d: 'flex',\n  gap: '$1',\n  align: 'center',\n});\n\nexport const Line = styled('div', {\n  position: 'absolute',\n  bottom: -7,\n  w: 160,\n  h: 2,\n  bg: '$grey-700',\n\n  /**\n   * Variants\n   */\n  variants: {\n    /**\n     * haveButton variant\n     */\n    haveButton: {\n      true: {},\n    },\n    /**\n     * haveDescription variant\n     */\n    haveDescription: {\n      true: {},\n    },\n  },\n  /**\n   * Compounding variants\n   */\n  compoundVariants: [\n    {\n      haveButton: 'true',\n      haveDescription: 'false',\n      css: {\n        d: 'none',\n        '@md': {\n          d: 'block',\n        },\n      },\n    },\n  ],\n});\n\nexport const Description = styled('div', {\n  color: '$grey-600',\n  mt: '$2',\n  border: 'none',\n\n  '@md': {\n    borderLeft: '2px solid',\n    borderColor: '$grey-700',\n    pl: '$2',\n  },\n});\n\nexport const FullLine = styled('hr', {\n  borderWidth: '0px 0px 1px',\n  borderColor: '$grey-700',\n  borderStyle: 'solid',\n  w: '100%',\n  m: 0,\n\n  /**\n   * Variants\n   */\n  variants: {\n    /**\n     * haveButton variant\n     */\n    haveButton: {\n      true: {},\n    },\n    /**\n     * haveDescription variant\n     */\n    haveDescription: {\n      true: {},\n    },\n  },\n  /**\n   * Compounding variants\n   */\n  compoundVariants: [\n    {\n      haveButton: 'true',\n      haveDescription: 'false',\n      css: {\n        d: 'none',\n        '@md': {\n          d: 'block',\n        },\n      },\n    },\n  ],\n});\n\nexport const Bottom = styled('div', {\n  d: 'flex',\n  flexDirection: 'column',\n  gap: '$4',\n\n  variants: {\n    /**\n     * haveButton variant\n     */\n    haveButton: {\n      true: {},\n    },\n    haveDescription: {\n      true: {},\n    },\n  },\n\n  compoundVariants: [\n    {\n      haveButton: 'true',\n      haveDescription: 'true',\n      css: {\n        textAlign: 'center',\n        '@md': {\n          textAlign: 'start',\n        },\n      },\n    },\n  ],\n});\n"],
  "mappings": "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",
  "names": []
}
